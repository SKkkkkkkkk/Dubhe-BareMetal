# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"






# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 1
# 10 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/cdefs.h" 1
# 11 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 2
# 1 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stdbool.h" 1 3 4
# 12 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 2
# 1 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stdint.h" 1 3 4
# 9 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stdint.h" 3 4
# 1 "/usr/include/stdint.h" 1 3 4
# 26 "/usr/include/stdint.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 461 "/usr/include/features.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 1 3 4
# 452 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 453 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/long-double.h" 1 3 4
# 454 "/usr/include/aarch64-linux-gnu/sys/cdefs.h" 2 3 4
# 462 "/usr/include/features.h" 2 3 4
# 485 "/usr/include/features.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/gnu/stubs.h" 1 3 4




# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 6 "/usr/include/aarch64-linux-gnu/gnu/stubs.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/gnu/stubs-lp64.h" 1 3 4
# 9 "/usr/include/aarch64-linux-gnu/gnu/stubs.h" 2 3 4
# 486 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 2 3 4
# 27 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/aarch64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/timesize.h" 1 3 4
# 19 "/usr/include/aarch64-linux-gnu/bits/timesize.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 20 "/usr/include/aarch64-linux-gnu/bits/timesize.h" 2 3 4
# 29 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4



# 31 "/usr/include/aarch64-linux-gnu/bits/types.h" 3 4
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;






typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;



typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 141 "/usr/include/aarch64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/typesizes.h" 1 3 4
# 142 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/time64.h" 1 3 4
# 143 "/usr/include/aarch64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 28 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wchar.h" 1 3 4
# 29 "/usr/include/stdint.h" 2 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/wordsize.h" 1 3 4
# 30 "/usr/include/stdint.h" 2 3 4




# 1 "/usr/include/aarch64-linux-gnu/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 35 "/usr/include/stdint.h" 2 3 4


# 1 "/usr/include/aarch64-linux-gnu/bits/stdint-uintn.h" 1 3 4
# 24 "/usr/include/aarch64-linux-gnu/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/usr/include/stdint.h" 2 3 4





typedef __int_least8_t int_least8_t;
typedef __int_least16_t int_least16_t;
typedef __int_least32_t int_least32_t;
typedef __int_least64_t int_least64_t;


typedef __uint_least8_t uint_least8_t;
typedef __uint_least16_t uint_least16_t;
typedef __uint_least32_t uint_least32_t;
typedef __uint_least64_t uint_least64_t;





typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 71 "/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 87 "/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 101 "/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stdint.h" 2 3 4
# 13 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 2
# 1 "/usr/include/string.h" 1 3 4
# 26 "/usr/include/string.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/libc-header-start.h" 1 3 4
# 27 "/usr/include/string.h" 2 3 4






# 1 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 1 3 4
# 209 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/string.h" 2 3 4
# 43 "/usr/include/string.h" 3 4
extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *memset (void *__s, int __c, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 91 "/usr/include/string.h" 3 4
extern void *memchr (const void *__s, int __c, size_t __n)
      __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 122 "/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



# 1 "/usr/include/aarch64-linux-gnu/bits/types/locale_t.h" 1 3 4
# 22 "/usr/include/aarch64-linux-gnu/bits/types/locale_t.h" 3 4
# 1 "/usr/include/aarch64-linux-gnu/bits/types/__locale_t.h" 1 3 4
# 28 "/usr/include/aarch64-linux-gnu/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/usr/include/aarch64-linux-gnu/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 154 "/usr/include/string.h" 2 3 4


extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    locale_t __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 226 "/usr/include/string.h" 3 4
extern char *strchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 253 "/usr/include/string.h" 3 4
extern char *strrchr (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 273 "/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 303 "/usr/include/string.h" 3 4
extern char *strpbrk (const char *__s, const char *__accept)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 330 "/usr/include/string.h" 3 4
extern char *strstr (const char *__haystack, const char *__needle)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));
# 385 "/usr/include/string.h" 3 4
extern size_t strlen (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern size_t strnlen (const char *__string, size_t __maxlen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern char *strerror (int __errnum) __attribute__ ((__nothrow__ , __leaf__));
# 410 "/usr/include/string.h" 3 4
extern int strerror_r (int __errnum, char *__buf, size_t __buflen) __asm__ ("" "__xpg_strerror_r") __attribute__ ((__nothrow__ , __leaf__))

                        __attribute__ ((__nonnull__ (2)));
# 428 "/usr/include/string.h" 3 4
extern char *strerror_l (int __errnum, locale_t __l) __attribute__ ((__nothrow__ , __leaf__));



# 1 "/usr/include/strings.h" 1 3 4
# 23 "/usr/include/strings.h" 3 4
# 1 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 1 3 4
# 24 "/usr/include/strings.h" 2 3 4










extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bcopy (const void *__src, void *__dest, size_t __n)
  __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 68 "/usr/include/strings.h" 3 4
extern char *index (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 96 "/usr/include/strings.h" 3 4
extern char *rindex (const char *__s, int __c)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));






extern int ffs (int __i) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));





extern int ffsl (long int __l) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));



extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, locale_t __loc)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));



# 433 "/usr/include/string.h" 2 3 4



extern void explicit_bzero (void *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) __attribute__ ((__nothrow__ , __leaf__));


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 499 "/usr/include/string.h" 3 4

# 14 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 2

# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch.h" 1
# 11 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch.h"
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/utils_def.h" 1
# 11 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/utils_def.h"
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/utils_def_exp.h" 1
# 12 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/utils_def.h" 2
# 12 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch.h" 2
# 16 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 2


# 17 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
typedef long register_t;
typedef unsigned long u_register_t;
# 157 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
static inline void tlbialle1(void) { __asm__ ("tlbi" " " "alle1" : : : "memory"); }
static inline void tlbialle1is(void) { __asm__ ("tlbi" " " "alle1is" : : : "memory"); }
static inline void tlbialle2(void) { __asm__ ("tlbi" " " "alle2" : : : "memory"); }
static inline void tlbialle2is(void) { __asm__ ("tlbi" " " "alle2is" : : : "memory"); }
static inline void tlbialle3(void) { __asm__ ("tlbi" " " "alle3" : : : "memory"); }
static inline void tlbialle3is(void) { __asm__ ("tlbi" " " "alle3is" : : : "memory"); }
static inline void tlbivmalle1(void) { __asm__ ("tlbi" " " "vmalle1" : : : "memory"); }
# 181 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
static inline void tlbivaae1is(uint64_t v) { __asm__ ("tlbi" " " "vaae1is" ", %0" : : "r" (v)); }
static inline void tlbivaale1is(uint64_t v) { __asm__ ("tlbi" " " "vaale1is" ", %0" : : "r" (v)); }
static inline void tlbivae2is(uint64_t v) { __asm__ ("tlbi" " " "vae2is" ", %0" : : "r" (v)); }
static inline void tlbivale2is(uint64_t v) { __asm__ ("tlbi" " " "vale2is" ", %0" : : "r" (v)); }
static inline void tlbivae3is(uint64_t v) { __asm__ ("tlbi" " " "vae3is" ", %0" : : "r" (v)); }
static inline void tlbivale3is(uint64_t v) { __asm__ ("tlbi" " " "vale3is" ", %0" : : "r" (v)); }





static inline void dcisw(uint64_t v) { __asm__ ("dc" " " "isw" ", %0" : : "r" (v)); }
static inline void dccisw(uint64_t v) { __asm__ ("dc" " " "cisw" ", %0" : : "r" (v)); }



static inline void dccsw(uint64_t v) { __asm__ ("dc" " " "csw" ", %0" : : "r" (v)); }




static inline void dccvac(uint64_t v) { __asm__ ("dc" " " "cvac" ", %0" : : "r" (v)); }

static inline void dcivac(uint64_t v) { __asm__ ("dc" " " "ivac" ", %0" : : "r" (v)); }
static inline void dccivac(uint64_t v) { __asm__ ("dc" " " "civac" ", %0" : : "r" (v)); }



static inline void dccvau(uint64_t v) { __asm__ ("dc" " " "cvau" ", %0" : : "r" (v)); }

static inline void dczva(uint64_t v) { __asm__ ("dc" " " "zva" ", %0" : : "r" (v)); }




static inline void ats12e1r(uint64_t v) { __asm__ ("at" " " "s12e1r" ", %0" : : "r" (v)); }
static inline void ats12e1w(uint64_t v) { __asm__ ("at" " " "s12e1w" ", %0" : : "r" (v)); }
static inline void ats12e0r(uint64_t v) { __asm__ ("at" " " "s12e0r" ", %0" : : "r" (v)); }
static inline void ats12e0w(uint64_t v) { __asm__ ("at" " " "s12e0w" ", %0" : : "r" (v)); }
static inline void ats1e1r(uint64_t v) { __asm__ ("at" " " "s1e1r" ", %0" : : "r" (v)); }
static inline void ats1e2r(uint64_t v) { __asm__ ("at" " " "s1e2r" ", %0" : : "r" (v)); }
static inline void ats1e3r(uint64_t v) { __asm__ ("at" " " "s1e3r" ", %0" : : "r" (v)); }




static inline void xpaci(uint64_t v) { __asm__ ("xpaci" "  %0" : : "r" (v)); }

void flush_dcache_range(uintptr_t addr, size_t size);
void clean_dcache_range(uintptr_t addr, size_t size);
void inv_dcache_range(uintptr_t addr, size_t size);

# 232 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h" 3 4
_Bool 
# 232 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
    is_dcache_enabled(void);

void dcsw_op_louis(u_register_t op_type);
void dcsw_op_all(u_register_t op_type);

void disable_mmu_el1(void);
void disable_mmu_el3(void);
void disable_mpu_el2(void);
void disable_mmu_icache_el1(void);
void disable_mmu_icache_el3(void);
void disable_mpu_icache_el2(void);
# 251 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
static inline u_register_t read_par_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "par_el1" : "=r" (v)); return v; } static inline void write_par_el1(u_register_t v) { __asm__ volatile ("msr " "par_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_id_pfr1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_pfr1_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64isar0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64isar0_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64isar1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64isar1_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64pfr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64pfr0_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64pfr1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64pfr1_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64dfr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64dfr0_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_afr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_afr0_el1" : "=r" (v)); return v; }
static inline u_register_t read_CurrentEl(void) { u_register_t v; __asm__ volatile ("mrs %0, " "CurrentEl" : "=r" (v)); return v; }
static inline u_register_t read_ctr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "ctr_el0" : "=r" (v)); return v; }
static inline u_register_t read_daif(void) { u_register_t v; __asm__ volatile ("mrs %0, " "daif" : "=r" (v)); return v; } static inline void write_daif(u_register_t v) { __asm__ volatile ("msr " "daif" ", %0" : : "r" (v)); }
static inline u_register_t read_spsr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "spsr_el1" : "=r" (v)); return v; } static inline void write_spsr_el1(u_register_t v) { __asm__ volatile ("msr " "spsr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_spsr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "spsr_el2" : "=r" (v)); return v; } static inline void write_spsr_el2(u_register_t v) { __asm__ volatile ("msr " "spsr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_spsr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "spsr_el3" : "=r" (v)); return v; } static inline void write_spsr_el3(u_register_t v) { __asm__ volatile ("msr " "spsr_el3" ", %0" : : "r" (v)); }
static inline u_register_t read_elr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "elr_el1" : "=r" (v)); return v; } static inline void write_elr_el1(u_register_t v) { __asm__ volatile ("msr " "elr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_elr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "elr_el2" : "=r" (v)); return v; } static inline void write_elr_el2(u_register_t v) { __asm__ volatile ("msr " "elr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_elr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "elr_el3" : "=r" (v)); return v; } static inline void write_elr_el3(u_register_t v) { __asm__ volatile ("msr " "elr_el3" ", %0" : : "r" (v)); }
static inline u_register_t read_mdccsr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mdccsr_el0" : "=r" (v)); return v; } static inline void write_mdccsr_el0(u_register_t v) { __asm__ volatile ("msr " "mdccsr_el0" ", %0" : : "r" (v)); }
static inline u_register_t read_dbgdtrrx_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "dbgdtrrx_el0" : "=r" (v)); return v; } static inline void write_dbgdtrrx_el0(u_register_t v) { __asm__ volatile ("msr " "dbgdtrrx_el0" ", %0" : : "r" (v)); }
static inline u_register_t read_dbgdtrtx_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "dbgdtrtx_el0" : "=r" (v)); return v; } static inline void write_dbgdtrtx_el0(u_register_t v) { __asm__ volatile ("msr " "dbgdtrtx_el0" ", %0" : : "r" (v)); }

static inline void wfi(void) { __asm__ ("wfi"); }
static inline void wfe(void) { __asm__ ("wfe"); }
static inline void sev(void) { __asm__ ("sev"); }
static inline void dsbsy(void) { __asm__ ("dsb" " " "sy" : : : "memory"); }
static inline void dmbsy(void) { __asm__ ("dmb" " " "sy" : : : "memory"); }
static inline void dmbst(void) { __asm__ ("dmb" " " "st" : : : "memory"); }
static inline void dmbld(void) { __asm__ ("dmb" " " "ld" : : : "memory"); }
static inline void dsbish(void) { __asm__ ("dsb" " " "ish" : : : "memory"); }
static inline void dsbnsh(void) { __asm__ ("dsb" " " "nsh" : : : "memory"); }
static inline void dsbishst(void) { __asm__ ("dsb" " " "ishst" : : : "memory"); }
static inline void dmboshld(void) { __asm__ ("dmb" " " "oshld" : : : "memory"); }
static inline void dmboshst(void) { __asm__ ("dmb" " " "oshst" : : : "memory"); }
static inline void dmbosh(void) { __asm__ ("dmb" " " "osh" : : : "memory"); }
static inline void dmbnshld(void) { __asm__ ("dmb" " " "nshld" : : : "memory"); }
static inline void dmbnshst(void) { __asm__ ("dmb" " " "nshst" : : : "memory"); }
static inline void dmbnsh(void) { __asm__ ("dmb" " " "nsh" : : : "memory"); }
static inline void dmbishld(void) { __asm__ ("dmb" " " "ishld" : : : "memory"); }
static inline void dmbishst(void) { __asm__ ("dmb" " " "ishst" : : : "memory"); }
static inline void dmbish(void) { __asm__ ("dmb" " " "ish" : : : "memory"); }
static inline void isb(void) { __asm__ ("isb"); }

static inline void enable_irq(void)
{
# 307 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifclr" ", %0" : : "i" (((1U) << 1)));
 isb();
}

static inline void enable_fiq(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifclr" ", %0" : : "i" (((1U) << 0)));
 isb();
}

static inline void enable_serror(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifclr" ", %0" : : "i" (((1U) << 2)));
 isb();
}

static inline void enable_debug_exceptions(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifclr" ", %0" : : "i" (((1U) << 3)));
 isb();
}

static inline void disable_irq(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifset" ", %0" : : "i" (((1U) << 1)));
 isb();
}

static inline void disable_fiq(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifset" ", %0" : : "i" (((1U) << 0)));
 isb();
}

static inline void disable_serror(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifset" ", %0" : : "i" (((1U) << 2)));
 isb();
}

static inline void disable_debug_exceptions(void)
{
 __asm__ volatile ("" ::: "memory");
 __asm__ volatile ("msr " "daifset" ", %0" : : "i" (((1U) << 3)));
 isb();
}

void __attribute__((__noreturn__)) smc(uint64_t x0, uint64_t x1, uint64_t x2, uint64_t x3,
   uint64_t x4, uint64_t x5, uint64_t x6, uint64_t x7);




static inline u_register_t read_midr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "midr_el1" : "=r" (v)); return v; }
static inline u_register_t read_mpidr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mpidr_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64mmfr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64mmfr0_el1" : "=r" (v)); return v; }
static inline u_register_t read_id_aa64mmfr1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "id_aa64mmfr1_el1" : "=r" (v)); return v; }

static inline u_register_t read_scr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "scr_el3" : "=r" (v)); return v; } static inline void write_scr_el3(u_register_t v) { __asm__ volatile ("msr " "scr_el3" ", %0" : : "r" (v)); }
static inline u_register_t read_hcr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "hcr_el2" : "=r" (v)); return v; } static inline void write_hcr_el2(u_register_t v) { __asm__ volatile ("msr " "hcr_el2" ", %0" : : "r" (v)); }

static inline u_register_t read_vbar_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vbar_el1" : "=r" (v)); return v; } static inline void write_vbar_el1(u_register_t v) { __asm__ volatile ("msr " "vbar_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_vbar_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vbar_el2" : "=r" (v)); return v; } static inline void write_vbar_el2(u_register_t v) { __asm__ volatile ("msr " "vbar_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_vbar_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vbar_el3" : "=r" (v)); return v; } static inline void write_vbar_el3(u_register_t v) { __asm__ volatile ("msr " "vbar_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_sctlr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "sctlr_el1" : "=r" (v)); return v; } static inline void write_sctlr_el1(u_register_t v) { __asm__ volatile ("msr " "sctlr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_sctlr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "sctlr_el2" : "=r" (v)); return v; } static inline void write_sctlr_el2(u_register_t v) { __asm__ volatile ("msr " "sctlr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_sctlr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "sctlr_el3" : "=r" (v)); return v; } static inline void write_sctlr_el3(u_register_t v) { __asm__ volatile ("msr " "sctlr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_actlr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "actlr_el1" : "=r" (v)); return v; } static inline void write_actlr_el1(u_register_t v) { __asm__ volatile ("msr " "actlr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_actlr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "actlr_el2" : "=r" (v)); return v; } static inline void write_actlr_el2(u_register_t v) { __asm__ volatile ("msr " "actlr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_actlr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "actlr_el3" : "=r" (v)); return v; } static inline void write_actlr_el3(u_register_t v) { __asm__ volatile ("msr " "actlr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_esr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "esr_el1" : "=r" (v)); return v; } static inline void write_esr_el1(u_register_t v) { __asm__ volatile ("msr " "esr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_esr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "esr_el2" : "=r" (v)); return v; } static inline void write_esr_el2(u_register_t v) { __asm__ volatile ("msr " "esr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_esr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "esr_el3" : "=r" (v)); return v; } static inline void write_esr_el3(u_register_t v) { __asm__ volatile ("msr " "esr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_afsr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "afsr0_el1" : "=r" (v)); return v; } static inline void write_afsr0_el1(u_register_t v) { __asm__ volatile ("msr " "afsr0_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_afsr0_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "afsr0_el2" : "=r" (v)); return v; } static inline void write_afsr0_el2(u_register_t v) { __asm__ volatile ("msr " "afsr0_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_afsr0_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "afsr0_el3" : "=r" (v)); return v; } static inline void write_afsr0_el3(u_register_t v) { __asm__ volatile ("msr " "afsr0_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_afsr1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "afsr1_el1" : "=r" (v)); return v; } static inline void write_afsr1_el1(u_register_t v) { __asm__ volatile ("msr " "afsr1_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_afsr1_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "afsr1_el2" : "=r" (v)); return v; } static inline void write_afsr1_el2(u_register_t v) { __asm__ volatile ("msr " "afsr1_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_afsr1_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "afsr1_el3" : "=r" (v)); return v; } static inline void write_afsr1_el3(u_register_t v) { __asm__ volatile ("msr " "afsr1_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_far_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "far_el1" : "=r" (v)); return v; } static inline void write_far_el1(u_register_t v) { __asm__ volatile ("msr " "far_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_far_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "far_el2" : "=r" (v)); return v; } static inline void write_far_el2(u_register_t v) { __asm__ volatile ("msr " "far_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_far_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "far_el3" : "=r" (v)); return v; } static inline void write_far_el3(u_register_t v) { __asm__ volatile ("msr " "far_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_mair_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mair_el1" : "=r" (v)); return v; } static inline void write_mair_el1(u_register_t v) { __asm__ volatile ("msr " "mair_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_mair_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mair_el2" : "=r" (v)); return v; } static inline void write_mair_el2(u_register_t v) { __asm__ volatile ("msr " "mair_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_mair_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mair_el3" : "=r" (v)); return v; } static inline void write_mair_el3(u_register_t v) { __asm__ volatile ("msr " "mair_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_amair_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "amair_el1" : "=r" (v)); return v; } static inline void write_amair_el1(u_register_t v) { __asm__ volatile ("msr " "amair_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_amair_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "amair_el2" : "=r" (v)); return v; } static inline void write_amair_el2(u_register_t v) { __asm__ volatile ("msr " "amair_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_amair_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "amair_el3" : "=r" (v)); return v; } static inline void write_amair_el3(u_register_t v) { __asm__ volatile ("msr " "amair_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_rvbar_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rvbar_el1" : "=r" (v)); return v; }
static inline u_register_t read_rvbar_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rvbar_el2" : "=r" (v)); return v; }
static inline u_register_t read_rvbar_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rvbar_el3" : "=r" (v)); return v; }

static inline u_register_t read_rmr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rmr_el1" : "=r" (v)); return v; } static inline void write_rmr_el1(u_register_t v) { __asm__ volatile ("msr " "rmr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_rmr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rmr_el2" : "=r" (v)); return v; } static inline void write_rmr_el2(u_register_t v) { __asm__ volatile ("msr " "rmr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_rmr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rmr_el3" : "=r" (v)); return v; } static inline void write_rmr_el3(u_register_t v) { __asm__ volatile ("msr " "rmr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_tcr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "tcr_el1" : "=r" (v)); return v; } static inline void write_tcr_el1(u_register_t v) { __asm__ volatile ("msr " "tcr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_tcr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "tcr_el2" : "=r" (v)); return v; } static inline void write_tcr_el2(u_register_t v) { __asm__ volatile ("msr " "tcr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_tcr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "tcr_el3" : "=r" (v)); return v; } static inline void write_tcr_el3(u_register_t v) { __asm__ volatile ("msr " "tcr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_ttbr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "ttbr0_el1" : "=r" (v)); return v; } static inline void write_ttbr0_el1(u_register_t v) { __asm__ volatile ("msr " "ttbr0_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_ttbr0_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "ttbr0_el2" : "=r" (v)); return v; } static inline void write_ttbr0_el2(u_register_t v) { __asm__ volatile ("msr " "ttbr0_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_ttbr0_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "ttbr0_el3" : "=r" (v)); return v; } static inline void write_ttbr0_el3(u_register_t v) { __asm__ volatile ("msr " "ttbr0_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_ttbr1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "ttbr1_el1" : "=r" (v)); return v; } static inline void write_ttbr1_el1(u_register_t v) { __asm__ volatile ("msr " "ttbr1_el1" ", %0" : : "r" (v)); }

static inline u_register_t read_vttbr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vttbr_el2" : "=r" (v)); return v; } static inline void write_vttbr_el2(u_register_t v) { __asm__ volatile ("msr " "vttbr_el2" ", %0" : : "r" (v)); }

static inline u_register_t read_cptr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cptr_el2" : "=r" (v)); return v; } static inline void write_cptr_el2(u_register_t v) { __asm__ volatile ("msr " "cptr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_cptr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cptr_el3" : "=r" (v)); return v; } static inline void write_cptr_el3(u_register_t v) { __asm__ volatile ("msr " "cptr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_cpacr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cpacr_el1" : "=r" (v)); return v; } static inline void write_cpacr_el1(u_register_t v) { __asm__ volatile ("msr " "cpacr_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_cntfrq_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntfrq_el0" : "=r" (v)); return v; } static inline void write_cntfrq_el0(u_register_t v) { __asm__ volatile ("msr " "cntfrq_el0" ", %0" : : "r" (v)); }
static inline u_register_t read_cnthp_ctl_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cnthp_ctl_el2" : "=r" (v)); return v; } static inline void write_cnthp_ctl_el2(u_register_t v) { __asm__ volatile ("msr " "cnthp_ctl_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_cnthp_tval_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cnthp_tval_el2" : "=r" (v)); return v; } static inline void write_cnthp_tval_el2(u_register_t v) { __asm__ volatile ("msr " "cnthp_tval_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_cnthp_cval_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cnthp_cval_el2" : "=r" (v)); return v; } static inline void write_cnthp_cval_el2(u_register_t v) { __asm__ volatile ("msr " "cnthp_cval_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_cntps_ctl_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntps_ctl_el1" : "=r" (v)); return v; } static inline void write_cntps_ctl_el1(u_register_t v) { __asm__ volatile ("msr " "cntps_ctl_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_cntps_tval_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntps_tval_el1" : "=r" (v)); return v; } static inline void write_cntps_tval_el1(u_register_t v) { __asm__ volatile ("msr " "cntps_tval_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_cntps_cval_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntps_cval_el1" : "=r" (v)); return v; } static inline void write_cntps_cval_el1(u_register_t v) { __asm__ volatile ("msr " "cntps_cval_el1" ", %0" : : "r" (v)); }
static inline u_register_t read_cntp_ctl_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntp_ctl_el0" : "=r" (v)); return v; } static inline void write_cntp_ctl_el0(u_register_t v) { __asm__ volatile ("msr " "cntp_ctl_el0" ", %0" : : "r" (v)); }
static inline u_register_t read_cntp_tval_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntp_tval_el0" : "=r" (v)); return v; } static inline void write_cntp_tval_el0(u_register_t v) { __asm__ volatile ("msr " "cntp_tval_el0" ", %0" : : "r" (v)); }
static inline u_register_t read_cntp_cval_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntp_cval_el0" : "=r" (v)); return v; } static inline void write_cntp_cval_el0(u_register_t v) { __asm__ volatile ("msr " "cntp_cval_el0" ", %0" : : "r" (v)); }
static inline u_register_t read_cntpct_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntpct_el0" : "=r" (v)); return v; }
static inline u_register_t read_cnthctl_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cnthctl_el2" : "=r" (v)); return v; } static inline void write_cnthctl_el2(u_register_t v) { __asm__ volatile ("msr " "cnthctl_el2" ", %0" : : "r" (v)); }

static inline u_register_t read_vtcr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vtcr_el2" : "=r" (v)); return v; } static inline void write_vtcr_el2(u_register_t v) { __asm__ volatile ("msr " "vtcr_el2" ", %0" : : "r" (v)); }
# 463 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
static inline u_register_t read_tpidr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "tpidr_el3" : "=r" (v)); return v; } static inline void write_tpidr_el3(u_register_t v) { __asm__ volatile ("msr " "tpidr_el3" ", %0" : : "r" (v)); }

static inline u_register_t read_cntvoff_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "cntvoff_el2" : "=r" (v)); return v; } static inline void write_cntvoff_el2(u_register_t v) { __asm__ volatile ("msr " "cntvoff_el2" ", %0" : : "r" (v)); }

static inline u_register_t read_vpidr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vpidr_el2" : "=r" (v)); return v; } static inline void write_vpidr_el2(u_register_t v) { __asm__ volatile ("msr " "vpidr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_vmpidr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "vmpidr_el2" : "=r" (v)); return v; } static inline void write_vmpidr_el2(u_register_t v) { __asm__ volatile ("msr " "vmpidr_el2" ", %0" : : "r" (v)); }

static inline u_register_t read_isr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "isr_el1" : "=r" (v)); return v; }

static inline u_register_t read_mdcr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mdcr_el2" : "=r" (v)); return v; } static inline void write_mdcr_el2(u_register_t v) { __asm__ volatile ("msr " "mdcr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_mdcr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "mdcr_el3" : "=r" (v)); return v; } static inline void write_mdcr_el3(u_register_t v) { __asm__ volatile ("msr " "mdcr_el3" ", %0" : : "r" (v)); }
static inline u_register_t read_hstr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "hstr_el2" : "=r" (v)); return v; } static inline void write_hstr_el2(u_register_t v) { __asm__ volatile ("msr " "hstr_el2" ", %0" : : "r" (v)); }
static inline u_register_t read_pmcr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "pmcr_el0" : "=r" (v)); return v; } static inline void write_pmcr_el0(u_register_t v) { __asm__ volatile ("msr " "pmcr_el0" ", %0" : : "r" (v)); }



static inline u_register_t read_icc_sre_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C12_C12_5" : "=r" (v)); return v; } static inline void write_icc_sre_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C12_C12_5" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_sre_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_4_C12_C9_5" : "=r" (v)); return v; } static inline void write_icc_sre_el2(u_register_t v) { __asm__ volatile ("msr " "S3_4_C12_C9_5" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_sre_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C12_C12_5" : "=r" (v)); return v; } static inline void write_icc_sre_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C12_C12_5" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_pmr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C4_C6_0" : "=r" (v)); return v; } static inline void write_icc_pmr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C4_C6_0" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_rpr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C12_C11_3" : "=r" (v)); return v; }
static inline u_register_t read_icc_igrpen1_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_c12_c12_7" : "=r" (v)); return v; } static inline void write_icc_igrpen1_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_c12_c12_7" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_igrpen1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C12_C12_7" : "=r" (v)); return v; } static inline void write_icc_igrpen1_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C12_C12_7" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_igrpen0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_c12_c12_6" : "=r" (v)); return v; } static inline void write_icc_igrpen0_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_c12_c12_6" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_hppir0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_c12_c8_2" : "=r" (v)); return v; }
static inline u_register_t read_icc_hppir1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_c12_c12_2" : "=r" (v)); return v; }
static inline u_register_t read_icc_iar0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_c12_c8_0" : "=r" (v)); return v; }
static inline u_register_t read_icc_iar1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_c12_c12_0" : "=r" (v)); return v; }
static inline void write_icc_eoir0_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_c12_c8_1" ", %0" : : "r" (v)); }
static inline void write_icc_eoir1_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_c12_c12_1" ", %0" : : "r" (v)); }
static inline void write_icc_sgi0r_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_c12_c11_7" ", %0" : : "r" (v)); }
static inline u_register_t read_icc_sgi1r(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C12_C11_5" : "=r" (v)); return v; } static inline void write_icc_sgi1r(u_register_t v) { __asm__ volatile ("msr " "S3_0_C12_C11_5" ", %0" : : "r" (v)); }

static inline u_register_t read_amcfgr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C2_1" : "=r" (v)); return v; }
static inline u_register_t read_amcgcr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C2_2" : "=r" (v)); return v; }
static inline u_register_t read_amcg1idr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C2_6" : "=r" (v)); return v; }
static inline u_register_t read_amcr_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C2_0" : "=r" (v)); return v; } static inline void write_amcr_el0(u_register_t v) { __asm__ volatile ("msr " "S3_3_C13_C2_0" ", %0" : : "r" (v)); }
static inline u_register_t read_amcntenclr0_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C2_4" : "=r" (v)); return v; } static inline void write_amcntenclr0_el0(u_register_t v) { __asm__ volatile ("msr " "S3_3_C13_C2_4" ", %0" : : "r" (v)); }
static inline u_register_t read_amcntenset0_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C2_5" : "=r" (v)); return v; } static inline void write_amcntenset0_el0(u_register_t v) { __asm__ volatile ("msr " "S3_3_C13_C2_5" ", %0" : : "r" (v)); }
static inline u_register_t read_amcntenclr1_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C3_0" : "=r" (v)); return v; } static inline void write_amcntenclr1_el0(u_register_t v) { __asm__ volatile ("msr " "S3_3_C13_C3_0" ", %0" : : "r" (v)); }
static inline u_register_t read_amcntenset1_el0(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C13_C3_1" : "=r" (v)); return v; } static inline void write_amcntenset1_el0(u_register_t v) { __asm__ volatile ("msr " "S3_3_C13_C3_1" ", %0" : : "r" (v)); }

static inline u_register_t read_mpamidr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C10_C4_4" : "=r" (v)); return v; }
static inline u_register_t read_mpam3_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C10_C5_0" : "=r" (v)); return v; } static inline void write_mpam3_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C10_C5_0" ", %0" : : "r" (v)); }
static inline u_register_t read_mpam2_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_4_C10_C5_0" : "=r" (v)); return v; } static inline void write_mpam2_el2(u_register_t v) { __asm__ volatile ("msr " "S3_4_C10_C5_0" ", %0" : : "r" (v)); }
static inline u_register_t read_mpamhcr_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_4_C10_C4_0" : "=r" (v)); return v; } static inline void write_mpamhcr_el2(u_register_t v) { __asm__ volatile ("msr " "S3_4_C10_C4_0" ", %0" : : "r" (v)); }

static inline u_register_t read_pmblimitr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C9_C10_0" : "=r" (v)); return v; } static inline void write_pmblimitr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C9_C10_0" ", %0" : : "r" (v)); }

static inline void write_zcr_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C1_C2_0" ", %0" : : "r" (v)); }
static inline void write_zcr_el2(u_register_t v) { __asm__ volatile ("msr " "S3_4_C1_C2_0" ", %0" : : "r" (v)); }

static inline u_register_t read_id_aa64smfr0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C0_C4_5" : "=r" (v)); return v; }
static inline u_register_t read_smcr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C1_C2_6" : "=r" (v)); return v; } static inline void write_smcr_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C1_C2_6" ", %0" : : "r" (v)); }

static inline u_register_t read_erridr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C3_0" : "=r" (v)); return v; }
static inline void write_errselr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C5_C3_1" ", %0" : : "r" (v)); }

static inline u_register_t read_erxfr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C4_0" : "=r" (v)); return v; }
static inline u_register_t read_erxctlr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C4_1" : "=r" (v)); return v; } static inline void write_erxctlr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C5_C4_1" ", %0" : : "r" (v)); }
static inline u_register_t read_erxstatus_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C4_2" : "=r" (v)); return v; } static inline void write_erxstatus_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C5_C4_2" ", %0" : : "r" (v)); }
static inline u_register_t read_erxaddr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C4_3" : "=r" (v)); return v; }
static inline u_register_t read_erxmisc0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C5_0" : "=r" (v)); return v; }
static inline u_register_t read_erxmisc1_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C5_1" : "=r" (v)); return v; }


static inline u_register_t read_id_aa64mmfr2_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C0_C7_2" : "=r" (v)); return v; }


static inline u_register_t read_apiakeyhi_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C2_C1_1" : "=r" (v)); return v; } static inline void write_apiakeyhi_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C2_C1_1" ", %0" : : "r" (v)); }
static inline u_register_t read_apiakeylo_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C2_C1_0" : "=r" (v)); return v; } static inline void write_apiakeylo_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C2_C1_0" ", %0" : : "r" (v)); }


static inline u_register_t read_dit(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_3_C4_C2_5" : "=r" (v)); return v; } static inline void write_dit(u_register_t v) { __asm__ volatile ("msr " "S3_3_C4_C2_5" ", %0" : : "r" (v)); }


static inline u_register_t read_tfsre0_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C6_1" : "=r" (v)); return v; } static inline void write_tfsre0_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C5_C6_1" ", %0" : : "r" (v)); }
static inline u_register_t read_tfsr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C5_C6_0" : "=r" (v)); return v; } static inline void write_tfsr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C5_C6_0" ", %0" : : "r" (v)); }
static inline u_register_t read_rgsr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C1_C0_5" : "=r" (v)); return v; } static inline void write_rgsr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C1_C0_5" ", %0" : : "r" (v)); }
static inline u_register_t read_gcr_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_C1_C0_6" : "=r" (v)); return v; } static inline void write_gcr_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_C1_C0_6" ", %0" : : "r" (v)); }


static inline u_register_t read_rndr(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rndr" : "=r" (v)); return v; }
static inline u_register_t read_rndrrs(void) { u_register_t v; __asm__ volatile ("mrs %0, " "rndrrs" : "=r" (v)); return v; }


static inline u_register_t read_hcrx_el2(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_4_C1_C2_2" : "=r" (v)); return v; } static inline void write_hcrx_el2(u_register_t v) { __asm__ volatile ("msr " "S3_4_C1_C2_2" ", %0" : : "r" (v)); }


static inline u_register_t read_clusterpwrdn_el1(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_0_c15_c3_6" : "=r" (v)); return v; } static inline void write_clusterpwrdn_el1(u_register_t v) { __asm__ volatile ("msr " "S3_0_c15_c3_6" ", %0" : : "r" (v)); }


static inline u_register_t read_cpuppmcr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C15_C2_0" : "=r" (v)); return v; } static inline void write_cpuppmcr_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C15_C2_0" ", %0" : : "r" (v)); }
static inline u_register_t read_cpumpmmcr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C15_C2_1" : "=r" (v)); return v; } static inline void write_cpumpmmcr_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C15_C2_1" ", %0" : : "r" (v)); }


static inline u_register_t read_gptbr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C2_C1_4" : "=r" (v)); return v; } static inline void write_gptbr_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C2_C1_4" ", %0" : : "r" (v)); }
static inline u_register_t read_gpccr_el3(void) { u_register_t v; __asm__ volatile ("mrs %0, " "S3_6_C2_C1_6" : "=r" (v)); return v; } static inline void write_gpccr_el3(u_register_t v) { __asm__ volatile ("msr " "S3_6_C2_C1_6" ", %0" : : "r" (v)); }
# 569 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
static inline unsigned int get_current_el(void)
{
 return (((read_CurrentEl()) >> (0x2U)) & (0x3U));
}

static inline unsigned int get_current_el_maybe_constant(void)
{
# 587 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
 return get_current_el();

}




static inline uint64_t el_implemented(unsigned int el)
{
 if (el > 3U) {
  return (0ULL);
 } else {
  unsigned int shift = (4U) * el;

  return (read_id_aa64pfr0_el1() >> shift) & (0xfULL);
 }
}






static inline void tlbipaallos(void)
{
 __asm__("SYS #6,c8,c1,#4");
}
# 623 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../devices/a55/arch/aarch64/inc/arch_helpers.h"
void gpt_tlbi_by_pa(uint64_t pa, size_t size);
# 8 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 2
# 1 "/usr/include/assert.h" 1 3 4
# 66 "/usr/include/assert.h" 3 4




# 69 "/usr/include/assert.h" 3 4
extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



# 9 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 2

# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/platform_def.h" 1
# 11 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 2


# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_defs.h" 1
# 12 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_defs.h"
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_mmu_helpers.h" 1
# 66 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_mmu_helpers.h"

# 66 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_mmu_helpers.h"
void setup_mmu_cfg(uint64_t *params, unsigned int flags,
     const uint64_t *base_table, unsigned long long max_pa,
     uintptr_t max_va, int xlat_regime);



void enable_mmu_el1(unsigned int flags);
void enable_mmu_el2(unsigned int flags);
void enable_mmu_el3(unsigned int flags);
void enable_mmu(unsigned int flags);

void enable_mmu_direct_el1(unsigned int flags);
void enable_mmu_direct_el2(unsigned int flags);
void enable_mmu_direct_el3(unsigned int flags);
# 89 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_mmu_helpers.h"

# 89 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_mmu_helpers.h" 3 4
_Bool 
# 89 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_mmu_helpers.h"
    xlat_arch_is_granule_size_supported(size_t size);
size_t xlat_arch_get_max_supported_granule_size(void);
# 13 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_defs.h" 2
# 14 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 2
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h" 1
# 11 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h"
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h" 1
# 22 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h"
# 1 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 1 3 4
# 143 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 3 4

# 143 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 321 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 3 4
typedef unsigned int wchar_t;
# 415 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
# 426 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 3 4
} max_align_t;
# 23 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h" 2



# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/../../../include/cassert.h" 1
# 27 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h" 2

# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_arch.h" 1
# 11 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_arch.h"
# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/aarch64/xlat_tables_aarch64.h" 1
# 21 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/aarch64/xlat_tables_aarch64.h"

# 21 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/aarch64/xlat_tables_aarch64.h"
unsigned long long tcr_physical_addr_size_bits(unsigned long long max_addr);
# 12 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_arch.h" 2
# 29 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h" 2



struct mmap_region;
# 49 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h"
struct xlat_ctx {



 unsigned long long pa_max_address;
 uintptr_t va_max_address;
# 64 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h"
 struct mmap_region *mmap;
 int mmap_num;






 uint64_t (*tables)[((1U) << ((12U) - (3U)))];
 int tables_num;
# 85 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h"
 int next_table;





 uint64_t *base_table;
 unsigned int base_table_entries;






 unsigned long long max_pa;
 uintptr_t max_va;


 unsigned int base_level;


 
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h" 3 4
_Bool 
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2_helpers.h"
     initialized;





 int xlat_regime;
};
# 12 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h" 2


# 1 "/usr/lib/gcc/aarch64-linux-gnu/9/include/stddef.h" 1 3 4
# 15 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h" 2
# 141 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h"
typedef struct mmap_region {
 unsigned long long base_pa;
 uintptr_t base_va;
 size_t size;
 unsigned int attr;

 size_t granularity;
} mmap_region_t;
# 170 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h"
typedef struct xlat_ctx xlat_ctx_t;
# 247 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h"
void init_xlat_tables(void);
void init_xlat_tables_ctx(xlat_ctx_t *ctx);






void xlat_setup_dynamic_ctx(xlat_ctx_t *ctx, unsigned long long pa_max,
       uintptr_t va_max, struct mmap_region *mmap,
       unsigned int mmap_num, uint64_t **tables,
       unsigned int tables_num, uint64_t *base_table,
       int xlat_regime, int *mapped_regions);






void mmap_add_region(unsigned long long base_pa, uintptr_t base_va,
       size_t size, unsigned int attr);
void mmap_add_region_ctx(xlat_ctx_t *ctx, const mmap_region_t *mm);






void mmap_add(const mmap_region_t *mm);
void mmap_add_ctx(xlat_ctx_t *ctx, const mmap_region_t *mm);






void mmap_add_region_alloc_va(unsigned long long base_pa, uintptr_t *base_va,
         size_t size, unsigned int attr);
void mmap_add_region_alloc_va_ctx(xlat_ctx_t *ctx, mmap_region_t *mm);






void mmap_add_alloc_va(mmap_region_t *mm);
# 382 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h"
int xlat_change_mem_attributes_ctx(const xlat_ctx_t *ctx, uintptr_t base_va,
       size_t size, uint32_t attr);
int xlat_change_mem_attributes(uintptr_t base_va, size_t size, uint32_t attr);
# 411 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/include/xlat_tables_v2.h"
int xlat_get_mem_attributes_ctx(const xlat_ctx_t *ctx, uintptr_t base_va,
    uint32_t *attr);
int xlat_get_mem_attributes(uintptr_t base_va, uint32_t *attr);
# 15 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 2

# 1 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_private.h" 1
# 41 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_private.h"
extern uint64_t mmu_cfg_params[3];


uint32_t xlat_arch_get_pas(uint32_t attr);





uint64_t xlat_arch_regime_get_xn_desc(int xlat_regime);
# 63 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_private.h"
void xlat_arch_tlbi_va(uintptr_t va, int xlat_regime);





void xlat_arch_tlbi_va_sync(void);


void xlat_mmap_print(const mmap_region_t *mmap);





void xlat_tables_print(xlat_ctx_t *ctx);




uint64_t xlat_desc(const xlat_ctx_t *ctx, uint32_t attr,
     unsigned long long addr_pa, unsigned int level);






unsigned int xlat_arch_current_el(void);





unsigned long long xlat_arch_get_max_supported_pa(void);






# 103 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_private.h" 3 4
_Bool 
# 103 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_private.h"
    is_mmu_enabled_ctx(const xlat_ctx_t *ctx);




uintptr_t xlat_get_min_virt_addr_space_size(void);
# 17 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 2





uint64_t mmu_cfg_params[3];





typedef char assert_invalid_physical_addr_space_sizefor_tf[(((((((1ULL << 32))) & ((((1ULL << 32))) - 1)) == 0))) ? 1 : -1] __attribute__((__unused__)); static mmap_region_t tf_mmap[(10) + 1]; static uint64_t tf_xlat_tables[(6)] [((1U) << ((12U) - (3U)))] __attribute__((__aligned__(((1U) << (12U))))) __attribute__((__section__("xlat_table"))); static uint64_t tf_base_xlat_table [((((1ULL << 32))) >> ((12U) + (((3U) - ((((((1ULL << 32))) > ((1ULL) << ((((12U) + ((12U) - (3U))) + ((12U) - (3U))) + ((12U) - (3U))))) ? 0U : (((((1ULL << 32))) > ((1ULL) << (((12U) + ((12U) - (3U))) + ((12U) - (3U))))) ? 1U : (((((1ULL << 32))) > ((1ULL) << ((12U) + ((12U) - (3U))))) ? 2U : 3U))))) * ((12U) - (3U)))))] __attribute__((__aligned__(((((1ULL << 32))) >> ((12U) + (((3U) - ((((((1ULL << 32))) > ((1ULL) << ((((12U) + ((12U) - (3U))) + ((12U) - (3U))) + ((12U) - (3U))))) ? 0U : (((((1ULL << 32))) > ((1ULL) << (((12U) + ((12U) - (3U))) + ((12U) - (3U))))) ? 1U : (((((1ULL << 32))) > ((1ULL) << ((12U) + ((12U) - (3U))))) ? 2U : 3U))))) * ((12U) - (3U))))) * sizeof(uint64_t)))) __attribute__((__section__("base_xlat_table"))); static xlat_ctx_t tf_xlat_ctx = { .pa_max_address = (((1ULL << 32))) - 1ULL, .va_max_address = (((1ULL << 32))) - 1UL, .mmap = tf_mmap, .mmap_num = ((10)), .tables = tf_xlat_tables, .tables_num = (sizeof(tf_xlat_tables) / sizeof((tf_xlat_tables)[0])), .next_table = 0, .base_table = tf_base_xlat_table, .base_table_entries = (sizeof(tf_base_xlat_table) / sizeof((tf_base_xlat_table)[0])), .max_pa = 0U, .max_va = 0U, .base_level = (((((1ULL << 32))) > ((1ULL) << ((((12U) + ((12U) - (3U))) + ((12U) - (3U))) + ((12U) - (3U))))) ? 0U : (((((1ULL << 32))) > ((1ULL) << (((12U) + ((12U) - (3U))) + ((12U) - (3U))))) ? 1U : (((((1ULL << 32))) > ((1ULL) << ((12U) + ((12U) - (3U))))) ? 2U : 3U))), .initialized = 
# 28 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
0
# 28 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
, .xlat_regime = (-1) }
                                                            ;

void mmap_add_region(unsigned long long base_pa, uintptr_t base_va, size_t size,
       unsigned int attr)
{
 mmap_region_t mm = { .base_pa = (base_pa), .base_va = (base_va), .size = (size), .attr = (attr), .granularity = (((1UL) << ((12U) + (((3U) - ((1U))) * ((12U) - (3U)))))), };

 mmap_add_region_ctx(&tf_xlat_ctx, &mm);
}

void mmap_add(const mmap_region_t *mm)
{
 mmap_add_ctx(&tf_xlat_ctx, mm);
}

void mmap_add_region_alloc_va(unsigned long long base_pa, uintptr_t *base_va,
         size_t size, unsigned int attr)
{
 mmap_region_t mm = { .base_pa = (base_pa), .base_va = (0), .size = (size), .attr = (attr), .granularity = (((1UL) << ((12U) + (((3U) - ((1U))) * ((12U) - (3U)))))), };

 mmap_add_region_alloc_va_ctx(&tf_xlat_ctx, &mm);

 *base_va = mm.base_va;
}

void mmap_add_alloc_va(mmap_region_t *mm)
{
 while (mm->granularity != 0U) {
  
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 ((void) sizeof ((
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
 mm->base_va == 0U
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 ) ? 1 : 0), __extension__ ({ if (
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
 mm->base_va == 0U
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 ) ; else __assert_fail (
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
 "mm->base_va == 0U"
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 , "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c", 57, __extension__ __PRETTY_FUNCTION__); }))
# 57 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
                          ;
  mmap_add_region_alloc_va_ctx(&tf_xlat_ctx, mm);
  mm++;
 }
}
# 95 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
void init_xlat_tables(void)
{
 
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
((void) sizeof ((
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
tf_xlat_ctx.xlat_regime == -1
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
) ? 1 : 0), __extension__ ({ if (
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
tf_xlat_ctx.xlat_regime == -1
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
) ; else __assert_fail (
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
"tf_xlat_ctx.xlat_regime == EL_REGIME_INVALID"
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
, "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c", 97, __extension__ __PRETTY_FUNCTION__); }))
# 97 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
                                                    ;

 unsigned int current_el = xlat_arch_current_el();

 if (current_el == 1U) {
  tf_xlat_ctx.xlat_regime = 1;
 } else if (current_el == 2U) {
  tf_xlat_ctx.xlat_regime = 2;
 } else {
  
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 ((void) sizeof ((
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
 current_el == 3U
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 ) ? 1 : 0), __extension__ ({ if (
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
 current_el == 3U
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 ) ; else __assert_fail (
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
 "current_el == 3U"
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c" 3 4
 , "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c", 106, __extension__ __PRETTY_FUNCTION__); }))
# 106 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
                         ;
  tf_xlat_ctx.xlat_regime = 3;
 }

 init_xlat_tables_ctx(&tf_xlat_ctx);
}

int xlat_get_mem_attributes(uintptr_t base_va, uint32_t *attr)
{
 return xlat_get_mem_attributes_ctx(&tf_xlat_ctx, base_va, attr);
}

int xlat_change_mem_attributes(uintptr_t base_va, size_t size, uint32_t attr)
{
 return xlat_change_mem_attributes_ctx(&tf_xlat_ctx, base_va, size, attr);
}
# 211 "/media/psf/Workspace/seehi/Dubhe/bare-metal/devices/a55/xlat_tables_v2/xlat_tables_context.c"
void enable_mmu_el1(unsigned int flags)
{
 setup_mmu_cfg((uint64_t *)&mmu_cfg_params, flags,
        tf_xlat_ctx.base_table, tf_xlat_ctx.max_pa,
        tf_xlat_ctx.va_max_address, 1);
 enable_mmu_direct_el1(flags);
}

void enable_mmu_el2(unsigned int flags)
{
 setup_mmu_cfg((uint64_t *)&mmu_cfg_params, flags,
        tf_xlat_ctx.base_table, tf_xlat_ctx.max_pa,
        tf_xlat_ctx.va_max_address, 2);
 enable_mmu_direct_el2(flags);
}

void enable_mmu_el3(unsigned int flags)
{
 setup_mmu_cfg((uint64_t *)&mmu_cfg_params, flags,
        tf_xlat_ctx.base_table, tf_xlat_ctx.max_pa,
        tf_xlat_ctx.va_max_address, 3);
 enable_mmu_direct_el3(flags);
}

void enable_mmu(unsigned int flags)
{
 switch (get_current_el_maybe_constant()) {
 case 1:
  enable_mmu_el1(flags);
  break;
 case 2:
  enable_mmu_el2(flags);
  break;
 case 3:
  enable_mmu_el3(flags);
  break;
 default:
  while(1);
 }
}
